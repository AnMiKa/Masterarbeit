%% Exercies 3.2.2

%% train logistic regression on the first three training sets
wl = zeros(3,3);
wl(:,1) = logisticreg(train1.X, train1.y);
wl(:,2) = logisticreg(train2.X, train2.y);
wl(:,3) = logisticreg(train3.X, train3.y);

% train fisher discriminant on the first three training sets
wf = zeros(3,3);
wf(:,1) = fisherdiscriminant(train1.X, train1.y);
wf(:,2) = fisherdiscriminant(train2.X, train2.y);
wf(:,3) = fisherdiscriminant(train3.X, train3.y);

% train support vector machine on forst three training sets -> hinge and
% hingequad
ws = zeros(3,3);
wsq = zeros(3,3);
train1.Y = train1.y;
train2.Y = train2.y;
train3.Y = train3.y;
i = train1.Y == 0;
train1.Y(i) = -1;
i = train2.Y == 0;
train2.Y(i) = -1;
i = train3.Y == 0;
train3.Y(i) = -1;
ws(:,1) = postpro_wb_class_hinge_qpas(train1.X,train1.Y,10);
wsq(:,1) = postpro_wb_class_hingequad_qpas(train1.X,train1.Y,10);
ws(:,2) = postpro_wb_class_hinge_qpas(train2.X,train2.Y,10);
wsq(:,2) = postpro_wb_class_hingequad_qpas(train2.X,train2.Y,10);
ws(:,3) = postpro_wb_class_hinge_qpas(train3.X,train3.Y,10);
wsq(:,3) = postpro_wb_class_hingequad_qpas(train3.X,train3.Y,10);

%% test errors for each test set
el = zeros(1,3);
el(1) = errorrate(wl(:,1), test1);
el(2) = errorrate(wl(:,2), test2);
el(3) = errorrate(wl(:,3), test3);

ef = zeros(1,3);
ef(1) = errorrate(wf(:,1), test1);
ef(2) = errorrate(wf(:,2), test2);
ef(3) = errorrate(wf(:,3), test3);

es = zeros(1,3);
es(1) = errorrate(ws(:,1), test1);
es(2) = errorrate(ws(:,2), test2);
es(3) = errorrate(ws(:,3), test3);

esq = zeros(1,3);
esq(1) = errorrate(ws(:,1), test1);
esq(2) = errorrate(ws(:,2), test2);
esq(3) = errorrate(ws(:,3), test3);

%% my errors for each test set

elh = zeros(1,3);
elh(1) = postpro_err_hinge(wl(2:3,1), wl(1,1), test1.X, test1.y);
elh(2) = postpro_err_hinge(wl(2:3,2), wl(1,2), test2.X, test2.y);
elh(3) = postpro_err_hinge(wl(2:3,3), wl(1,3), test3.X, test3.y);

elm = zeros(1,3);
elm(1) = postpro_err_misclass(wl(2:3,1), wl(1,1), test1.X, test1.y);
elm(2) = postpro_err_misclass(wl(2:3,2), wl(1,2), test2.X, test2.y);
elm(3) = postpro_err_misclass(wl(2:3,3), wl(1,3), test3.X, test3.y);

efh = zeros(1,3);
efh(1) = postpro_err_hinge(wf(:,1), test1);
efh(2) = postpro_err_hinge(wf(:,2), test2);
efh(3) = postpro_err_hinge(wf(:,3), test3);

efm = zeros(1,3);
efm(1) = postpro_err_misclass(wl(2:3,1), wl(1,1), test1.X, test1.y);
efm(2) = postpro_err_misclass(wl(2:3,2), wl(1,2), test2.X, test2.y);
efm(3) = postpro_err_misclass(wl(2:3,3), wl(1,3), test3.X, test3.y);

esh = zeros(1,3);
esh(1) = postpro_err_hinge(ws(:,1), test1);
esh(2) = postpro_err_hinge(ws(:,2), test2);
esh(3) = postpro_err_hinge(ws(:,3), test3);

esm = zeros(1,3);
elm(1) = postpro_err_misclass(wl(2:3,1), wl(1,1), test1.X, test1.y);
elm(2) = postpro_err_misclass(wl(2:3,2), wl(1,2), test2.X, test2.y);
elm(3) = postpro_err_misclass(wl(2:3,3), wl(1,3), test3.X, test3.y);

esqh = zeros(1,3);
esqh(1) = postpro_err_hinge(ws(:,1), test1);
esqh(2) = postpro_err_hinge(ws(:,2), test2);
esqh(3) = postpro_err_hinge(ws(:,3), test3);

elm = zeros(1,3);
elm(1) = postpro_err_misclass(wl(2:3,1), wl(1,1), test1.X, test1.y);
elm(2) = postpro_err_misclass(wl(2:3,2), wl(1,2), test2.X, test2.y);
elm(3) = postpro_err_misclass(wl(2:3,3), wl(1,3), test3.X, test3.y);

%% plot data and desision boundaries of logistic regression and Fisher
% discriminant
tests = [test1, test2, test3];
hold on
for i =  1:3
    boundary([wl(:,i), wf(:,i), ws(:,i), wsq(:,i)], tests(i));
    figure
end

hold off
